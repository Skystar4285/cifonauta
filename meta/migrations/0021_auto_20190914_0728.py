# Generated by Django 2.2.5 on 2019-09-14 07:28

import os
from django.db import migrations, models

def copy_paths(apps, schema_editor):
    Media = apps.get_model('meta', 'Media')
    media = Media.objects.all()

    Image = apps.get_model('meta', 'Image')
    Video = apps.get_model('meta', 'Video')

    for m in media:
        if m.old_image:
            i = Image.objects.get(id=m.old_image)
            filename = i.filename
            covername = '{}_{}.jpg'.format(os.path.splitext(i.filename)[0], 'cover')
            m.sitepath = filename
            m.coverpath = covername
            m.save()

        elif m.old_video:
            v = Video.objects.get(id=m.old_video)
            filename = '{}.mp4'.format(os.path.splitext(v.filename)[0])
            covername = '{}_{}.jpg'.format(os.path.splitext(v.filename)[0], 'cover')
            m.sitepath = filename
            m.coverpath = covername
            m.save()

        print(m.filepath, m.sitepath, m.coverpath)


class Migration(migrations.Migration):

    dependencies = [
        ('meta', '0020_media'),
    ]

    operations = [
        migrations.AddField(
            model_name='media',
            name='coverpath',
            field=models.ImageField(blank=True, default='', help_text='Imagem de amostra do arquivo processado.', upload_to='', verbose_name='amostra do arquivo.'),
        ),
        migrations.AddField(
            model_name='media',
            name='sitepath',
            field=models.FileField(blank=True, default='', help_text='Arquivo processado para a web.', upload_to='', verbose_name='arquivo web.'),
        ),
        migrations.RunPython(copy_paths, reverse_code=migrations.RunPython.noop),
    ]
