# Generated by Django 2.2.5 on 2019-09-10 19:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('meta', '0014_auto_20150125_1857'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='author',
            options={'ordering': ['name'], 'verbose_name': 'autor', 'verbose_name_plural': 'autores'},
        ),
        migrations.AlterModelOptions(
            name='city',
            options={'ordering': ['name'], 'verbose_name': 'cidade', 'verbose_name_plural': 'cidades'},
        ),
        migrations.AlterModelOptions(
            name='country',
            options={'verbose_name': 'país', 'verbose_name_plural': 'país'},
        ),
        migrations.AlterModelOptions(
            name='image',
            options={'ordering': ['id'], 'verbose_name': 'foto', 'verbose_name_plural': 'fotos'},
        ),
        migrations.AlterModelOptions(
            name='reference',
            options={'ordering': ['-citation'], 'verbose_name': 'referência', 'verbose_name_plural': 'referências'},
        ),
        migrations.AlterModelOptions(
            name='rights',
            options={'ordering': ['name'], 'verbose_name': 'detentor dos direitos', 'verbose_name_plural': 'detentores dos direitos'},
        ),
        migrations.AlterModelOptions(
            name='size',
            options={'ordering': ['position'], 'verbose_name': 'tamanho', 'verbose_name_plural': 'tamanhos'},
        ),
        migrations.AlterModelOptions(
            name='source',
            options={'ordering': ['name'], 'verbose_name': 'especialista', 'verbose_name_plural': 'especialistas'},
        ),
        migrations.AlterModelOptions(
            name='state',
            options={'ordering': ['name'], 'verbose_name': 'estado', 'verbose_name_plural': 'estados'},
        ),
        migrations.AlterModelOptions(
            name='stats',
            options={'verbose_name': 'estatísticas', 'verbose_name_plural': 'estatísticas'},
        ),
        migrations.AlterModelOptions(
            name='sublocation',
            options={'ordering': ['name'], 'verbose_name': 'local', 'verbose_name_plural': 'locais'},
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'verbose_name': 'marcador', 'verbose_name_plural': 'marcadores'},
        ),
        migrations.AlterModelOptions(
            name='tagcategory',
            options={'verbose_name': 'categoria de marcadores', 'verbose_name_plural': 'categorias de marcadores'},
        ),
        migrations.AlterModelOptions(
            name='taxon',
            options={'ordering': ['name'], 'verbose_name': 'táxon', 'verbose_name_plural': 'táxons'},
        ),
        migrations.AlterModelOptions(
            name='tourposition',
            options={'ordering': ['position', 'tour__id'], 'verbose_name': 'posição no tour', 'verbose_name_plural': 'posições no tour'},
        ),
        migrations.AlterModelOptions(
            name='video',
            options={'ordering': ['id'], 'verbose_name': 'vídeo', 'verbose_name_plural': 'vídeos'},
        ),
        migrations.AddField(
            model_name='size',
            name='description_en',
            field=models.TextField(blank=True, help_text='Descrição da classe de tamanho.', null=True, verbose_name='descrição'),
        ),
        migrations.AddField(
            model_name='size',
            name='description_pt_br',
            field=models.TextField(blank=True, help_text='Descrição da classe de tamanho.', null=True, verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='author',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas a este autor.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='author',
            name='images',
            field=models.ManyToManyField(blank=True, help_text='Fotos associadas a este autor.', null=True, to='meta.Image', verbose_name='fotos'),
        ),
        migrations.AlterField(
            model_name='author',
            name='name',
            field=models.CharField(help_text='Nome do autor.', max_length=200, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='author',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome do autor.', max_length=200, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='author',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados a este autor.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='author',
            name='videos',
            field=models.ManyToManyField(blank=True, help_text='Vídeos associados a este autor.', null=True, to='meta.Video', verbose_name='vídeos'),
        ),
        migrations.AlterField(
            model_name='city',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associados à esta cidade.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='city',
            name='name',
            field=models.CharField(help_text='Nome da cidade.', max_length=64, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='city',
            name='name_en',
            field=models.CharField(help_text='Nome da cidade.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='city',
            name='name_pt_br',
            field=models.CharField(help_text='Nome da cidade.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='city',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome da cidade.', max_length=64, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='city',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados à esta cidade.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='country',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas a este país.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='country',
            name='name',
            field=models.CharField(help_text='Nome do país.', max_length=64, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='country',
            name='name_en',
            field=models.CharField(help_text='Nome do país.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='country',
            name='name_pt_br',
            field=models.CharField(help_text='Nome do país.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='country',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome do país.', max_length=64, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='country',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados a este país.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='image',
            name='caption',
            field=models.TextField(blank=True, help_text='Legenda da imagem.', verbose_name='legenda'),
        ),
        migrations.AlterField(
            model_name='image',
            name='caption_en',
            field=models.TextField(blank=True, help_text='Legenda da imagem.', null=True, verbose_name='legenda'),
        ),
        migrations.AlterField(
            model_name='image',
            name='caption_pt_br',
            field=models.TextField(blank=True, help_text='Legenda da imagem.', null=True, verbose_name='legenda'),
        ),
        migrations.AlterField(
            model_name='image',
            name='city',
            field=models.ForeignKey(blank=True, help_text='Cidade mostrada na imagem (ou cidade de coleta).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.City', verbose_name='cidade'),
        ),
        migrations.AlterField(
            model_name='image',
            name='country',
            field=models.ForeignKey(blank=True, help_text='País mostrado na imagem (ou país de coleta).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Country', verbose_name='país'),
        ),
        migrations.AlterField(
            model_name='image',
            name='cover',
            field=models.BooleanField(default=False, help_text='Imagem esteticamente bela, para usar na página principal.', verbose_name='imagem de capa'),
        ),
        migrations.AlterField(
            model_name='image',
            name='datatype',
            field=models.CharField(default='photo', help_text='Tipo de mídia.', max_length=10, verbose_name='tipo de mídia'),
        ),
        migrations.AlterField(
            model_name='image',
            name='date',
            field=models.DateTimeField(blank=True, help_text='Data em que a imagem foi criada.', verbose_name='data'),
        ),
        migrations.AlterField(
            model_name='image',
            name='filepath',
            field=models.ImageField(blank=True, default='', help_text='Arquivo na pasta do site.', null=True, upload_to='site_media/photos/', verbose_name='arquivo fonte local (novo)'),
        ),
        migrations.AlterField(
            model_name='image',
            name='geolocation',
            field=models.CharField(blank=True, help_text='Geolocalização da imagem no formato decimal.', max_length=25, verbose_name='geolocalização'),
        ),
        migrations.AlterField(
            model_name='image',
            name='highlight',
            field=models.BooleanField(default=False, help_text='Imagem que merece destaque.', verbose_name='destaque'),
        ),
        migrations.AlterField(
            model_name='image',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Informa se imagem está visível para visitantes anônimos do site.', verbose_name='público'),
        ),
        migrations.AlterField(
            model_name='image',
            name='latitude',
            field=models.CharField(blank=True, help_text='Latitude onde foi criada a imagem.', max_length=12, verbose_name='latitude'),
        ),
        migrations.AlterField(
            model_name='image',
            name='longitude',
            field=models.CharField(blank=True, help_text='Longitude onde foi criada a imagem.', max_length=12, verbose_name='longitude'),
        ),
        migrations.AlterField(
            model_name='image',
            name='notes',
            field=models.TextField(blank=True, help_text='Campo de anotações extras sobre a imagem.', verbose_name='anotações'),
        ),
        migrations.AlterField(
            model_name='image',
            name='old_filepath',
            field=models.CharField(blank=True, help_text='Caminho para o arquivo original.', max_length=200, verbose_name='arquivo fonte original'),
        ),
        migrations.AlterField(
            model_name='image',
            name='pub_date',
            field=models.DateTimeField(auto_now_add=True, help_text='Data de publicação da imagem no Cifonauta.', verbose_name='data de publicação'),
        ),
        migrations.AlterField(
            model_name='image',
            name='review',
            field=models.BooleanField(default=False, help_text='Informa se imagem deve ser revisada.', verbose_name='sob revisão'),
        ),
        migrations.AlterField(
            model_name='image',
            name='rights',
            field=models.ForeignKey(blank=True, help_text='Detentor dos direitos autorais da imagem.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Rights', verbose_name='direitos'),
        ),
        migrations.AlterField(
            model_name='image',
            name='size',
            field=models.ForeignKey(blank=True, default='', help_text='Classe de tamanho do organismo na imagem.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Size', verbose_name='tamanho'),
        ),
        migrations.AlterField(
            model_name='image',
            name='source_filepath',
            field=models.CharField(blank=True, help_text='Arquivo fonte na pasta local.', max_length=200, verbose_name='arquivo fonte local'),
        ),
        migrations.AlterField(
            model_name='image',
            name='state',
            field=models.ForeignKey(blank=True, help_text='Estado mostrado na imagem (ou estado de coleta).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.State', verbose_name='estado'),
        ),
        migrations.AlterField(
            model_name='image',
            name='stats',
            field=models.OneToOneField(editable=False, help_text='Reúne estatísticas sobre a imagem.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Stats', verbose_name='estatísticas'),
        ),
        migrations.AlterField(
            model_name='image',
            name='sublocation',
            field=models.ForeignKey(blank=True, help_text='Localidade mostrada na imagem (ou local de coleta).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Sublocation', verbose_name='local'),
        ),
        migrations.AlterField(
            model_name='image',
            name='thumb_filepath',
            field=models.ImageField(help_text='Pasta que guarda thumbnails.', upload_to='site_media/images/thumbs', verbose_name='thumbnail web'),
        ),
        migrations.AlterField(
            model_name='image',
            name='timestamp',
            field=models.DateTimeField(help_text='Data da última modificação do arquivo.', verbose_name='data de modificação'),
        ),
        migrations.AlterField(
            model_name='image',
            name='title',
            field=models.CharField(blank=True, help_text='Título da imagem.', max_length=200, verbose_name='título'),
        ),
        migrations.AlterField(
            model_name='image',
            name='title_en',
            field=models.CharField(blank=True, help_text='Título da imagem.', max_length=200, null=True, verbose_name='título'),
        ),
        migrations.AlterField(
            model_name='image',
            name='title_pt_br',
            field=models.CharField(blank=True, help_text='Título da imagem.', max_length=200, null=True, verbose_name='título'),
        ),
        migrations.AlterField(
            model_name='image',
            name='web_filepath',
            field=models.ImageField(help_text='Caminho para o arquivo web.', upload_to='site_media/images/', verbose_name='arquivo web'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='citation',
            field=models.TextField(blank=True, help_text='Citação formatada da referência.', verbose_name='citação'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas à esta referência.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='images',
            field=models.ManyToManyField(blank=True, help_text='Fotos associadas à esta referência.', null=True, to='meta.Image', verbose_name='fotos'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='name',
            field=models.CharField(help_text='Identificador da referência (Mendeley ID).', max_length=100, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do identificar da referência.', max_length=100, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados à esta referência.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='videos',
            field=models.ManyToManyField(blank=True, help_text='Vídeos associados à esta referência.', null=True, to='meta.Video', verbose_name='vídeos'),
        ),
        migrations.AlterField(
            model_name='rights',
            name='name',
            field=models.CharField(help_text='Nome do detentor dos direitos autorais.', max_length=64, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='rights',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome do detentor dos direitos autorais.', max_length=64, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='size',
            name='description',
            field=models.TextField(blank=True, help_text='Descrição da classe de tamanho.', verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='size',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas à esta classe de tamanho.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='size',
            name='name',
            field=models.CharField(choices=[('<0,1 mm', '<0,1 mm'), ('0,1 - 1,0 mm', '0,1 - 1,0 mm'), ('1,0 - 10 mm', '1,0 - 10 mm'), ('10 - 100 mm', '10 - 100 mm'), ('>100 mm', '>100 mm')], help_text='Nome da classe de tamanho.', max_length=32, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='size',
            name='position',
            field=models.PositiveIntegerField(default=0, help_text='Define ordem das classes de tamanho em um queryset.', verbose_name='posição'),
        ),
        migrations.AlterField(
            model_name='size',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome da classe de tamanho.', max_length=32, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='size',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados à esta classe de tamanho.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='source',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas a este especialista.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='source',
            name='images',
            field=models.ManyToManyField(blank=True, help_text='Fotos associadas a este especialista.', null=True, to='meta.Image', verbose_name='fotos'),
        ),
        migrations.AlterField(
            model_name='source',
            name='name',
            field=models.CharField(help_text='Nome do especialista.', max_length=200, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='source',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome do especialista.', max_length=200, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='source',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados a este especialista.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='source',
            name='videos',
            field=models.ManyToManyField(blank=True, help_text='Vídeos associados a este especialista.', null=True, to='meta.Video', verbose_name='vídeos'),
        ),
        migrations.AlterField(
            model_name='state',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas a este estado.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='state',
            name='name',
            field=models.CharField(help_text='Nome do estado.', max_length=64, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='state',
            name='name_en',
            field=models.CharField(help_text='Nome do estado.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='state',
            name='name_pt_br',
            field=models.CharField(help_text='Nome do estado.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='state',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome do estado.', max_length=64, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='state',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados a este estado.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='stats',
            name='pageviews',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de impressões de página de uma imagem.', verbose_name='visitas'),
        ),
        migrations.AlterField(
            model_name='sublocation',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas à esta localidade.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='sublocation',
            name='name',
            field=models.CharField(help_text='Nome da localidade.', max_length=64, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='sublocation',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome da localidade.', max_length=64, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='sublocation',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados à esta localidade.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='description',
            field=models.TextField(blank=True, help_text='Descrição do marcador.', verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='description_en',
            field=models.TextField(blank=True, help_text='Descrição do marcador.', null=True, verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='description_pt_br',
            field=models.TextField(blank=True, help_text='Descrição do marcador.', null=True, verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas a este marcador.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='images',
            field=models.ManyToManyField(blank=True, help_text='Fotos associadas a este marcador.', null=True, to='meta.Image', verbose_name='fotos'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(help_text='Nome do marcador.', max_length=64, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name_en',
            field=models.CharField(help_text='Nome do marcador.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name_pt_br',
            field=models.CharField(help_text='Nome do marcador.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Categoria a que este marcador pertence.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tags', to='meta.TagCategory', verbose_name='pai'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='position',
            field=models.PositiveIntegerField(default=0, help_text='Definem a ordem dos marcadores em um queryset.', verbose_name='posição'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome do marcador.', max_length=64, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associadas a este marcador.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='videos',
            field=models.ManyToManyField(blank=True, help_text='Vídeos associados a este marcador.', null=True, to='meta.Video', verbose_name='vídeos'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='description',
            field=models.TextField(blank=True, help_text='Descrição da categoria de marcadores.', verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='description_en',
            field=models.TextField(blank=True, help_text='Descrição da categoria de marcadores.', null=True, verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='description_pt_br',
            field=models.TextField(blank=True, help_text='Descrição da categoria de marcadores.', null=True, verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='name',
            field=models.CharField(help_text='Nome da categoria de marcadores.', max_length=64, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='name_en',
            field=models.CharField(help_text='Nome da categoria de marcadores.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='name_pt_br',
            field=models.CharField(help_text='Nome da categoria de marcadores.', max_length=64, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Categoria pai desta categoria de marcadores.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tagcat_children', to='meta.TagCategory', verbose_name='pai'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='position',
            field=models.PositiveIntegerField(default=0, help_text='Define a ordem das categorias.', verbose_name='posição'),
        ),
        migrations.AlterField(
            model_name='tagcategory',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome da categoria de marcadores.', max_length=64, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='aphia',
            field=models.PositiveIntegerField(blank=True, help_text='APHIA, o identificador do táxon no WoRMS.', null=True),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='common',
            field=models.CharField(blank=True, help_text='Nome popular do táxon.', max_length=256, verbose_name='nome popular'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='common_en',
            field=models.CharField(blank=True, help_text='Nome popular do táxon.', max_length=256, null=True, verbose_name='nome popular'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='common_pt_br',
            field=models.CharField(blank=True, help_text='Nome popular do táxon.', max_length=256, null=True, verbose_name='nome popular'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas a este táxon.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='images',
            field=models.ManyToManyField(blank=True, help_text='Fotos associadas a este táxon.', null=True, to='meta.Image', verbose_name='fotos'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='level',
            field=models.PositiveIntegerField(editable=False),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='lft',
            field=models.PositiveIntegerField(editable=False),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='name',
            field=models.CharField(help_text='Nome do táxon.', max_length=256, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Táxon pai deste táxon.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='meta.Taxon', verbose_name='pai'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='rank',
            field=models.CharField(blank=True, help_text='Ranking taxonômico do táxon.', max_length=256, verbose_name='rank'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='rank_en',
            field=models.CharField(blank=True, help_text='Ranking taxonômico do táxon.', max_length=256, null=True, verbose_name='rank'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='rank_pt_br',
            field=models.CharField(blank=True, help_text='Ranking taxonômico do táxon.', max_length=256, null=True, verbose_name='rank'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='rght',
            field=models.PositiveIntegerField(editable=False),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome do táxon.', max_length=256, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='tsn',
            field=models.PositiveIntegerField(blank=True, help_text='TSN, o identificador do táxon no ITIS.', null=True),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados a este táxon.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='taxon',
            name='videos',
            field=models.ManyToManyField(blank=True, help_text='Vídeos associados a este táxon.', null=True, to='meta.Video', verbose_name='vídeos'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='description',
            field=models.TextField(blank=True, help_text='Descrição do tour.', verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='description_en',
            field=models.TextField(blank=True, help_text='Descrição do tour.', null=True, verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='description_pt_br',
            field=models.TextField(blank=True, help_text='Descrição do tour.', null=True, verbose_name='descrição'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='image_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de fotos associadas a este tour.', verbose_name='número de fotos'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='images',
            field=models.ManyToManyField(blank=True, help_text='Fotos associadas a este tour.', null=True, to='meta.Image', verbose_name='fotos'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Informa se o tour está visível para visitantes anônimos.', verbose_name='público'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='name',
            field=models.CharField(help_text='Nome do tour.', max_length=100, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='name_en',
            field=models.CharField(help_text='Nome do tour.', max_length=100, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='name_pt_br',
            field=models.CharField(help_text='Nome do tour.', max_length=100, null=True, unique=True, verbose_name='nome'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='pub_date',
            field=models.DateTimeField(auto_now_add=True, help_text='Data de publicação do tour no Cifonauta.', verbose_name='data de publicação'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='references',
            field=models.ManyToManyField(blank=True, help_text='Referências associadas a este tour.', null=True, to='meta.Reference', verbose_name='referências'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='slug',
            field=models.SlugField(blank=True, help_text='Slug do nome do tour.', max_length=100, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='stats',
            field=models.OneToOneField(editable=False, help_text='Guarda estatísticas de acesso ao tour.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Stats', verbose_name='estatísticas'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='timestamp',
            field=models.DateTimeField(auto_now=True, help_text='Data da última modificação do tour.', verbose_name='data de modificação'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='video_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Número de vídeos associados a este tour.', verbose_name='número de vídeos'),
        ),
        migrations.AlterField(
            model_name='tour',
            name='videos',
            field=models.ManyToManyField(blank=True, help_text='Vídeos associados a este tour.', null=True, to='meta.Video', verbose_name='vídeos'),
        ),
        migrations.AlterField(
            model_name='tourposition',
            name='position',
            field=models.PositiveIntegerField(default=0, help_text='Define a ordem das imagens em um tour.', verbose_name='posição'),
        ),
        migrations.AlterField(
            model_name='video',
            name='caption',
            field=models.TextField(blank=True, help_text='Legenda da imagem.', verbose_name='legenda'),
        ),
        migrations.AlterField(
            model_name='video',
            name='caption_en',
            field=models.TextField(blank=True, help_text='Legenda da imagem.', null=True, verbose_name='legenda'),
        ),
        migrations.AlterField(
            model_name='video',
            name='caption_pt_br',
            field=models.TextField(blank=True, help_text='Legenda da imagem.', null=True, verbose_name='legenda'),
        ),
        migrations.AlterField(
            model_name='video',
            name='city',
            field=models.ForeignKey(blank=True, help_text='Cidade mostrada na imagem (ou cidade de coleta).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.City', verbose_name='cidade'),
        ),
        migrations.AlterField(
            model_name='video',
            name='codec',
            field=models.CharField(default='', help_text='Codec do vídeo original.', max_length=20, verbose_name='codec'),
        ),
        migrations.AlterField(
            model_name='video',
            name='country',
            field=models.ForeignKey(blank=True, help_text='País mostrado na imagem (ou país de coleta).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Country', verbose_name='país'),
        ),
        migrations.AlterField(
            model_name='video',
            name='cover',
            field=models.BooleanField(default=False, help_text='Imagem esteticamente bela, para usar na página principal.', verbose_name='imagem de capa'),
        ),
        migrations.AlterField(
            model_name='video',
            name='datatype',
            field=models.CharField(default='video', help_text='Tipo de mídia.', max_length=10, verbose_name='tipo de mídia'),
        ),
        migrations.AlterField(
            model_name='video',
            name='date',
            field=models.DateTimeField(blank=True, help_text='Data em que a imagem foi criada.', verbose_name='data'),
        ),
        migrations.AlterField(
            model_name='video',
            name='dimensions',
            field=models.CharField(default='0x0', help_text='Dimensões do vídeo original.', max_length=20, verbose_name='dimensões'),
        ),
        migrations.AlterField(
            model_name='video',
            name='duration',
            field=models.CharField(default='00:00:00', help_text='Duração do vídeo no formato HH:MM:SS.', max_length=20, verbose_name='duração'),
        ),
        migrations.AlterField(
            model_name='video',
            name='filepath',
            field=models.ImageField(blank=True, default='', help_text='Arquivo na pasta do site.', null=True, upload_to='site_media/photos/', verbose_name='arquivo fonte local (novo)'),
        ),
        migrations.AlterField(
            model_name='video',
            name='geolocation',
            field=models.CharField(blank=True, help_text='Geolocalização da imagem no formato decimal.', max_length=25, verbose_name='geolocalização'),
        ),
        migrations.AlterField(
            model_name='video',
            name='highlight',
            field=models.BooleanField(default=False, help_text='Imagem que merece destaque.', verbose_name='destaque'),
        ),
        migrations.AlterField(
            model_name='video',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Informa se imagem está visível para visitantes anônimos do site.', verbose_name='público'),
        ),
        migrations.AlterField(
            model_name='video',
            name='large_thumb',
            field=models.ImageField(help_text='Caminho para o thumbnail grande do vídeo.', upload_to='site_media/images/thumbs', verbose_name='thumbnail grande'),
        ),
        migrations.AlterField(
            model_name='video',
            name='latitude',
            field=models.CharField(blank=True, help_text='Latitude onde foi criada a imagem.', max_length=12, verbose_name='latitude'),
        ),
        migrations.AlterField(
            model_name='video',
            name='longitude',
            field=models.CharField(blank=True, help_text='Longitude onde foi criada a imagem.', max_length=12, verbose_name='longitude'),
        ),
        migrations.AlterField(
            model_name='video',
            name='mp4_filepath',
            field=models.FileField(blank=True, help_text='Caminho para o arquivo MP4.', upload_to='site_media/videos/', verbose_name='arquivo mp4'),
        ),
        migrations.AlterField(
            model_name='video',
            name='notes',
            field=models.TextField(blank=True, help_text='Campo de anotações extras sobre a imagem.', verbose_name='anotações'),
        ),
        migrations.AlterField(
            model_name='video',
            name='ogg_filepath',
            field=models.FileField(blank=True, help_text='Caminho para o arquivo OGG.', upload_to='site_media/videos/', verbose_name='arquivo ogg'),
        ),
        migrations.AlterField(
            model_name='video',
            name='old_filepath',
            field=models.CharField(blank=True, help_text='Caminho para o arquivo original.', max_length=200, verbose_name='arquivo fonte original'),
        ),
        migrations.AlterField(
            model_name='video',
            name='pub_date',
            field=models.DateTimeField(auto_now_add=True, help_text='Data de publicação da imagem no Cifonauta.', verbose_name='data de publicação'),
        ),
        migrations.AlterField(
            model_name='video',
            name='review',
            field=models.BooleanField(default=False, help_text='Informa se imagem deve ser revisada.', verbose_name='sob revisão'),
        ),
        migrations.AlterField(
            model_name='video',
            name='rights',
            field=models.ForeignKey(blank=True, help_text='Detentor dos direitos autorais da imagem.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Rights', verbose_name='direitos'),
        ),
        migrations.AlterField(
            model_name='video',
            name='size',
            field=models.ForeignKey(blank=True, default='', help_text='Classe de tamanho do organismo na imagem.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Size', verbose_name='tamanho'),
        ),
        migrations.AlterField(
            model_name='video',
            name='source_filepath',
            field=models.CharField(blank=True, help_text='Arquivo fonte na pasta local.', max_length=200, verbose_name='arquivo fonte local'),
        ),
        migrations.AlterField(
            model_name='video',
            name='state',
            field=models.ForeignKey(blank=True, help_text='Estado mostrado na imagem (ou estado de coleta).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.State', verbose_name='estado'),
        ),
        migrations.AlterField(
            model_name='video',
            name='stats',
            field=models.OneToOneField(editable=False, help_text='Reúne estatísticas sobre a imagem.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Stats', verbose_name='estatísticas'),
        ),
        migrations.AlterField(
            model_name='video',
            name='sublocation',
            field=models.ForeignKey(blank=True, help_text='Localidade mostrada na imagem (ou local de coleta).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='meta.Sublocation', verbose_name='local'),
        ),
        migrations.AlterField(
            model_name='video',
            name='thumb_filepath',
            field=models.ImageField(help_text='Pasta que guarda thumbnails.', upload_to='site_media/images/thumbs', verbose_name='thumbnail web'),
        ),
        migrations.AlterField(
            model_name='video',
            name='timestamp',
            field=models.DateTimeField(help_text='Data da última modificação do arquivo.', verbose_name='data de modificação'),
        ),
        migrations.AlterField(
            model_name='video',
            name='title',
            field=models.CharField(blank=True, help_text='Título da imagem.', max_length=200, verbose_name='título'),
        ),
        migrations.AlterField(
            model_name='video',
            name='title_en',
            field=models.CharField(blank=True, help_text='Título da imagem.', max_length=200, null=True, verbose_name='título'),
        ),
        migrations.AlterField(
            model_name='video',
            name='title_pt_br',
            field=models.CharField(blank=True, help_text='Título da imagem.', max_length=200, null=True, verbose_name='título'),
        ),
        migrations.AlterField(
            model_name='video',
            name='webm_filepath',
            field=models.FileField(blank=True, help_text='Caminho para o arquivo WEBM.', upload_to='site_media/videos/', verbose_name='arquivo webm'),
        ),
    ]
