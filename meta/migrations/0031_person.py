# Generated by Django 2.2.5 on 2019-09-14 10:37

from django.db import migrations, models

def import_people(apps, schema_editor):
    '''From the previous Author and Source models.'''

    Person = apps.get_model('meta', 'Person')
    Media = apps.get_model('meta', 'Media')
    Author = apps.get_model('meta', 'Author')
    Source = apps.get_model('meta', 'Source')
    authors = Author.objects.all()
    sources = Source.objects.all()

    for author in authors:
        person, created = Person.objects.get_or_create(name=author.name)

        if created:
            person.slug = author.slug
            person.is_author = True

        person.save()

        if author.images.all():
            for image in author.images.all():
                try:
                    media = Media.objects.get(old_image=image.id)
                    person.media.add(media)
                except:
                    continue

        if author.videos.all():
            for video in author.videos.all():
                try:
                    media = Media.objects.get(old_video=video.id)
                    person.media.add(media)
                except:
                    continue

        person.save()

        print(person.id, person.name, person.slug, person.is_author, person.media.count())

    for source in sources:
        person, created = Person.objects.get_or_create(name=source.name)

        if created:
            person.slug = source.slug
            person.is_public = False

        person.save()

        if source.images.all():
            for image in source.images.all():
                try:
                    media = Media.objects.get(old_image=image.id)
                    person.media.add(media)
                except:
                    continue

        if source.videos.all():
            for video in source.videos.all():
                try:
                    media = Media.objects.get(old_video=video.id)
                    person.media.add(media)
                except:
                    continue

        person.save()

        print(person.id, person.name, person.slug, person.is_author, person.media.count())


class Migration(migrations.Migration):

    dependencies = [
        ('meta', '0030_auto_20190914_1036'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Nome do autor.', max_length=200, unique=True, verbose_name='nome')),
                ('slug', models.SlugField(blank=True, help_text='Slug do nome do autor.', max_length=200, unique=True, verbose_name='slug')),
                ('is_author', models.BooleanField(default=False, help_text='Informa se a pessoa Ã© autora.', verbose_name='author')),
                ('media', models.ManyToManyField(blank=True, help_text='Arquivos associados a este autor.', to='meta.Media', verbose_name='fotos')),
            ],
            options={
                'verbose_name': 'pessoa',
                'verbose_name_plural': 'pessoas',
                'ordering': ['name'],
            },
        ),
        migrations.RunPython(import_people, reverse_code=migrations.RunPython.noop),
    ]
